<스택>
#define CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct node {
    int elem;
    struct node* next;
   
}node;

struct node* getNode() {
    struct node* p = (struct node*)malloc(sizeof(struct node));
    p->elem = -1;
    p->next = NULL;
    
}
struct stack {
    node* top;
};

void initstack(struct stack* s) {
    s->top = NULL;
    return;
}

void push(struct stack* s, int e) {
    struct node* p = getNode();
    p -> elem = e;
    p->next = s->top;
    s->top = p;
    return;
}

int isEmpty(struct stack* s) {
    return(s->top == NULL);
}

void emptyStackException(){
    printf("StackException\n");
}

void putnode(struct stack* p) {
    free(p);
    p = NULL;
}

int pop(struct stack* s) {
    if (isEmpty(s)) {
        emptyStackException();
        return -1;
    }

    int e = s->top -> elem;
    struct node* p = s->top;
    s->top = s->top->next;
    putnode(p);
    return e;
}

void visit(int e) {
    printf("%c", e);
}

void traverse(struct stack* s) {
    struct node* p = s->top;

    while (p != NULL) {
        visit(p->elem);
        p = p->next;
    }
    printf("\n");
}

int main() {
    struct stack S;
    initstack(&S);

    push(&S, 'C');
    push(&S, 'B');
    push(&S, 'A');
    push(&S, 'X');

    traverse(&S);
}
  